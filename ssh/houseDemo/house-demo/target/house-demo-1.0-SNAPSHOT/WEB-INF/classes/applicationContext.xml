<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--扫描驱动配置-->
    <context:annotation-config/>
    <!--自动扫描所有注解路径-->
    <context:component-scan base-package="com.couragehe.demo"/>

    <!--属性配置-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>

    <!--消息源配置-->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource"
          p:basename="Message">
    </bean>

    <!--数据源配置-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"></property>
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="200" />
        <!--  配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!--   配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!--  配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!--   打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    </bean>
    <!--会话工厂-->

    <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">

        <property name="dataSource">

            <ref bean="dataSource"></ref>

        </property>

        <property name="packagesToScan" value="com.couragehe.demo.entity"></property><!-- 配置需要扫描的包路径，在该包下，所有的类注解配置都会被扫描 -->

        <property name="hibernateProperties">

            <props>
                <!--Hibernate方言配置-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!--是否显示SQL语句-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!--是否使用格式化SQL语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>

                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>

                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>

                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <!--Hibernate缓存统计策略配置-->
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>

                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>

                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>

                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>

                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>

                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>

                <prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>

                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

                <prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
            </props>
        </property>
    </bean>
    <!--Hibernate事务配置-->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--事务配置-->
    <tx:annotation-driven transaction-manager="txManager"/>

</beans>